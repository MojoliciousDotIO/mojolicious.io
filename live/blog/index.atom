<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mojolicious.io/blog/</id>
    <title>mojolicious.io</title>
    <updated>2018-12-03T00:00:00Z</updated>
    <link href="https://mojolicious.io/blog/index.atom" rel="self" />
    <link href="https://mojolicious.io/blog/" rel="alternate" />
    <generator version="0.093">Statocles</generator>

    <entry>
        <id>https://mojolicious.io/blog/2018/12/03/higher-order-promises/</id>
        <title>Higher Order Promises</title>
        <author><name>brian d foy</name></author>
        <link href="https://mojolicious.io/blog/2018/12/03/higher-order-promises/" rel="alternate" />
        <content type="html"><![CDATA[
            <h2>Create new, complex Promises by composing Promises</h2>

<p>Mojolicious 7.49 added an its own implementation of the <a href="https://promisesaplus.com">Promises/A+ specification</a>. mohawk wrote about these in <a href="https://mojolicious.io/blog/2017/12/14/day-14-you-promised-to-call/">Day 14: You Promised To Call!</a> of the 2017 Mojolicious Advent Calender where he showed you how to fetch many webpages concurrently. This Advent entry extends that with  more Promise tricks.</p>

                <p><a href="https://mojolicious.io/blog/2018/12/03/higher-order-promises/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/promises/">promises</a>
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                </p>

        ]]></content>
        <updated>2018-12-03T00:00:00Z</updated>
        <category term="promises" />
        <category term="advent" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2018/12/02/automatic-reload-for-rapid-development/</id>
        <title>Automatic Reload for Rapid Development</title>
        <author><name>Doug Bell</name></author>
        <link href="https://mojolicious.io/blog/2018/12/02/automatic-reload-for-rapid-development/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>Developing webapps with <a href="http://mojolicious.org">Mojolicious</a> is a lot of fun!
Using <a href="https://mojolicious.org/perldoc/morbo">the <code>morbo</code> server</a> for
development, every change to my webapp causes a restart to load my changes.
This way the next request I make has all my new code!</p>

<p>So, I change my code, the webapp restarts, and I go back to my browser window.
Wait... Where&#39;s my new code? Why isn&#39;t the bug fixed? Did... Did I forget to
reload my browser window again? Ugh! Of course!</p>

<p>Does this happen to you? Probably not. But, it&#39;s still annoying to reload the
browser window after every backend code change. It&#39;d be nice if my browser
window automatically reloaded every time the web server restarted!</p>

                <p><a href="https://mojolicious.io/blog/2018/12/02/automatic-reload-for-rapid-development/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/development/">development</a>
                </p>

        ]]></content>
        <updated>2018-12-02T00:00:00Z</updated>
        <category term="advent" />
        <category term="development" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2018/12/01/welcome-mojoconf-recap/</id>
        <title>Welcome &amp; MojoConf Recap</title>
        <author><name>Joel Berger</name></author>
        <link href="https://mojolicious.io/blog/2018/12/01/welcome-mojoconf-recap/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>Welcome to another year of the Mojolicious Advent Calendar!
2018 has been very good to Mojolicious and I could think of no better way to kick off this calendar than with a recap of the 2018 Nordic Perl Workshop and MojoConf held in Oslo, Norway.</p>

                <p><a href="https://mojolicious.io/blog/2018/12/01/welcome-mojoconf-recap/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/mojoconf/">mojoconf</a>
                </p>

        ]]></content>
        <updated>2018-12-01T00:00:00Z</updated>
        <category term="advent" />
        <category term="mojoconf" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2018/03/18/graphql-openapi/</id>
        <title>Mojolicious, OpenAPI - and GraphQL</title>
        <author><name>Ed J</name></author>
        <link href="https://mojolicious.io/blog/2018/03/18/graphql-openapi/" rel="alternate" />
        <content type="html"><![CDATA[
            <h2>How to easily add a GraphQL interface to the public REST API of your Mojolicious application</h2>

<p>During the Mojolicious 2017 Advent calendar series, we looked at <a href="https://mojolicious.io/blog/2017/12/22/day-22-how-to-build-a-public-rest-api/">how to build a public REST API using Mojolicious</a>. A technology that is getting a lot of buzz is <a href="http://graphql.org/learn/">GraphQL</a>. Now that it has been <a href="https://metacpan.org/pod/GraphQL">ported to Perl 5</a>, what if there were an easy way to let people access your API using it?</p>

                <p><a href="https://mojolicious.io/blog/2018/03/18/graphql-openapi/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/api/">api</a>
                    <a href="https://mojolicious.io/blog/tag/openapi/">openapi</a>
                    <a href="https://mojolicious.io/blog/tag/swagger/">swagger</a>
                    <a href="https://mojolicious.io/blog/tag/graphql/">graphql</a>
                </p>

        ]]></content>
        <updated>2018-03-18T00:00:00Z</updated>
        <category term="api" />
        <category term="openapi" />
        <category term="swagger" />
        <category term="graphql" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2017/12/24/day-24-release-and-wrap-up/</id>
        <title>Day 24: Release and Wrap-Up</title>
        <author><name>Joel Berger</name></author>
        <link href="https://mojolicious.io/blog/2017/12/24/day-24-release-and-wrap-up/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>Over the course of this advent calendar, we have discussed the <a href="https://mojolicious.io/blog/tag/wishlist/">Wishlist example application</a> several times.
We used it to motivate discussions about <a href="https://mojolicious.io/blog/2017/12/17/day-17-the-wishlist-app/">templates</a>, <a href="https://mojolicious.io/blog/2017/12/18/day-18-the-wishlist-model/">models</a>, <a href="https://mojolicious.io/blog/2017/12/19/day-19-make-your-app-installable/">installable apps</a>, and <a href="https://mojolicious.io/blog/2017/12/20/day-20-practical-testing/">testing</a>.
In this post I want to use it somewhat differently.
I would like to motivate you, the reader, into action in a few different ways.</p>

                <p><a href="https://mojolicious.io/blog/2017/12/24/day-24-release-and-wrap-up/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/wishlist/">wishlist</a>
                </p>

        ]]></content>
        <updated>2017-12-24T00:00:00Z</updated>
        <category term="advent" />
        <category term="wishlist" />
    </entry>
</feed>

