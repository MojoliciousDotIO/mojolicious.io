<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mojolicious.io/blog/tag/yancy/</id>
    <title>mojolicious.io</title>
    <updated>2019-04-15T00:00:00Z</updated>
    <link href="https://mojolicious.io/blog/tag/yancy.atom" rel="self" />
    <link href="https://mojolicious.io/blog/tag/yancy/" rel="alternate" />
    <generator version="0.093">Statocles</generator>

    <entry>
        <id>https://mojolicious.io/blog/2019/04/15/testing-environment-with-tmux/</id>
        <title>Testing Environment With Tmux</title>
        <author><name>Doug Bell</name></author>
        <link href="https://mojolicious.io/blog/2019/04/15/testing-environment-with-tmux/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>The <a href="http://preaction.me/yancy">Yancy CMS</a> for the <a href="http://mojolicious.org">Mojolicious web
framework</a> currently supports three different
database systems directly (and even more through <a href="http://dbix-class.org">the DBIx::Class
ORM</a>). As a result, when doing development,
I need to have two database daemons running locally, a bunch of
different environment variables to tell the tests where those databases
are, and a web daemon to test the front-end.</p>

<p>Setting up these daemons is a pain, but I also do not want to run them
all the time (to save on my laptop&#39;s battery). To me, it&#39;s easier to run
a database daemon for a specific project than to try to manage all the
databases I might need. But that means that every time I want to do some
work on Yancy, I need to start up a bunch of things.</p>

<p>Since I do all my development in a terminal window, <a href="http://tmux.github.io">the Tmux terminal
multiplexer</a> has become an extremely useful tool.
Using a shell script and Tmux, I can run a single command to set up all
the databases, environment variables, and all the tabs I need to get to
work quickly.</p>

                <p><a href="https://mojolicious.io/blog/2019/04/15/testing-environment-with-tmux/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/development/">development</a>
                    <a href="https://mojolicious.io/blog/tag/testing/">testing</a>
                    <a href="https://mojolicious.io/blog/tag/yancy/">yancy</a>
                </p>

        ]]></content>
        <updated>2019-04-15T00:00:00Z</updated>
        <category term="development" />
        <category term="testing" />
        <category term="yancy" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2018/12/19/you-only-export-twice/</id>
        <title>Day 19: You Only Export Twice</title>
        <author><name>Doug Bell</name></author>
        <link href="https://mojolicious.io/blog/2018/12/19/you-only-export-twice/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>With my Yancy documentation site built, with <a href="https://mojolicious.io/blog/2018/12/17/a-website-for-yancy">a custom landing
page</a> and <a href="https://mojolicious.io/blog/2018/12/18/a-view-to-a-pod">a POD
viewer</a>, I just need to deploy the site. I
could deploy the site using <a href="https://mojolicious.org/perldoc/Mojolicious/Guides/Cookbook#Hypnotoad">hypnotoad, Mojolicious&#39;s preforking server with
hot
deployment</a>,
but that would require me to have a server and keep it online. It&#39;d be a lot
better if I could just deploy a <a href="https://pages.github.com">static website to
Github</a> like all the cool people are doing.</p>

<p>But to do that, I&#39;d need to take my dynamic website and turn it into a static
one, and that&#39;s impossible! Or is it? Why am I asking me, when I&#39;m the one who
wrote a way to do it: The <a href="https://metacpan.org/pod/Mojolicious::Command::export">Mojolicious export
command</a>.</p>

                <p><a href="https://mojolicious.io/blog/2018/12/19/you-only-export-twice/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/command/">command</a>
                    <a href="https://mojolicious.io/blog/tag/yancy/">yancy</a>
                </p>

        ]]></content>
        <updated>2018-12-19T00:00:00Z</updated>
        <category term="advent" />
        <category term="command" />
        <category term="yancy" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2018/12/18/a-view-to-a-pod/</id>
        <title>Day 18: A View To A POD</title>
        <author><name>Doug Bell</name></author>
        <link href="https://mojolicious.io/blog/2018/12/18/a-view-to-a-pod/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>In order for Yancy to have a good documentation site, it needs to
actually render the documentation. To render Perl documentation in
<a href="http://mojolicious.org">Mojolicious</a>, I can use the
<a href="http://metacpan.org/pod/Mojolicious::Plugin::PODViewer">PODViewer</a>
plugin (a fork of the now-deprecated
<a href="http://mojolicious.org/perldoc/Mojolicious/Plugin/PODRenderer">PODRenderer</a>
plugin).</p>

                <p><a href="https://mojolicious.io/blog/2018/12/18/a-view-to-a-pod/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/documentation/">documentation</a>
                    <a href="https://mojolicious.io/blog/tag/yancy/">yancy</a>
                </p>

        ]]></content>
        <updated>2018-12-18T00:00:00Z</updated>
        <category term="advent" />
        <category term="documentation" />
        <category term="yancy" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2018/12/17/a-website-for-yancy/</id>
        <title>Day 17: A Website For Yancy</title>
        <author><name>Doug Bell</name></author>
        <link href="https://mojolicious.io/blog/2018/12/17/a-website-for-yancy/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>For this year, I decided that Yancy needed a website. Rather than build
a website with a <a href="http://preaction.me/statocles">static site generator like
Statocles</a>, which is so popular these
days, I decided to do something wild and unpredictable: A dynamic
website! Lucky for me, I have the perfect project to easily build
a dynamic website: Yancy!</p>

                <p><a href="https://mojolicious.io/blog/2018/12/17/a-website-for-yancy/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/yancy/">yancy</a>
                </p>

        ]]></content>
        <updated>2018-12-17T00:00:00Z</updated>
        <category term="advent" />
        <category term="yancy" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2018/12/06/making-a-list-with-yancy/</id>
        <title>Day 6: Making A List with Yancy</title>
        <author><name>Doug Bell</name></author>
        <link href="https://mojolicious.io/blog/2018/12/06/making-a-list-with-yancy/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>In these modern times, with billions of people in the world, Santa needs a
modern system to keep track of his naughty/nice list. Lucky for Santa, modern
Perl has a modern web framework, <a href="http://mojolicious.org">Mojolicious</a>.</p>

                <p><a href="https://mojolicious.io/blog/2018/12/06/making-a-list-with-yancy/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/yancy/">yancy</a>
                    <a href="https://mojolicious.io/blog/tag/example/">example</a>
                </p>

        ]]></content>
        <updated>2018-12-06T00:00:00Z</updated>
        <category term="advent" />
        <category term="yancy" />
        <category term="example" />
    </entry>
</feed>

