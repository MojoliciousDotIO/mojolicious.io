<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mojolicious.io/blog/tag/deployment/</id>
    <title>mojolicious.io</title>
    <updated>2019-03-18T00:00:00Z</updated>
    <link href="https://mojolicious.io/blog/tag/deployment.atom" rel="self" />
    <link href="https://mojolicious.io/blog/tag/deployment/" rel="alternate" />
    <generator version="0.093">Statocles</generator>

    <entry>
        <id>https://mojolicious.io/blog/2019/03/18/reverse-proxy-with-path/</id>
        <title>Reverse Proxy With Path</title>
        <author><name>Doug Bell</name></author>
        <link href="https://mojolicious.io/blog/2019/03/18/reverse-proxy-with-path/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>It&#39;s extremely common for a <a href="http://mojolicious.org">Mojolicious</a> web
application to be hosted behind some kind of HTTP proxy: A production website
usually includes <a href="https://varnish-cache.org">Varnish</a>, or
<a href="https://www.nginx.com">Nginx</a>, or a CDN (probably using Varnish or Nginx).</p>

<p>In the most common case, a web application is the entire domain, so configuring
the reverse proxy is very simple: Add the <code>-p</code> option to
<a href="https://mojolicious.org/perldoc/hypnotoad"><code>hypnotoad</code></a> or <a href="https://mojolicious.org/perldoc/Mojolicious/Command/daemon"><code>myapp.pl
daemon</code></a> command,
or set the <code>MOJO_REVERSE_PROXY</code> environment variable to a true value. <a href="https://mojolicious.org/perldoc/Mojolicious/Guides/Cookbook">See the
Mojolicious Cookbook for more
details</a>.</p>

<p>But what if my application doesn&#39;t have its own domain? How do I host a
Mojolicious application as a reverse proxy from a path in another domain?</p>

                <p><a href="https://mojolicious.io/blog/2019/03/18/reverse-proxy-with-path/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/deployment/">deployment</a>
                    <a href="https://mojolicious.io/blog/tag/development/">development</a>
                </p>

        ]]></content>
        <updated>2019-03-18T00:00:00Z</updated>
        <category term="deployment" />
        <category term="development" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2018/12/22/use-carton-for-your-mojolicious-app-deployment/</id>
        <title>Day 22: Use Carton for your Mojolicious app deployment</title>
        <author><name>Luc Didry</name></author>
        <link href="https://mojolicious.io/blog/2018/12/22/use-carton-for-your-mojolicious-app-deployment/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>You have a lovely Mojolicious app, it’s time to deploy it!</p>

<p>But… it’s not working on the production server! What is going on? Oh no, the modules you rely on are not on the same version that on your development server. What can you do?</p>

                <p><a href="https://mojolicious.io/blog/2018/12/22/use-carton-for-your-mojolicious-app-deployment/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/deployment/">deployment</a>
                    <a href="https://mojolicious.io/blog/tag/carton/">carton</a>
                </p>

        ]]></content>
        <updated>2018-12-22T00:00:00Z</updated>
        <category term="advent" />
        <category term="deployment" />
        <category term="carton" />
    </entry>
</feed>

