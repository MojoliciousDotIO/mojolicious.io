<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mojolicious.io/blog/tag/testing/</id>
    <title>mojolicious.io</title>
    <updated>2018-12-20T00:00:00Z</updated>
    <link href="https://mojolicious.io/blog/tag/testing.atom" rel="self" />
    <link href="https://mojolicious.io/blog/tag/testing/" rel="alternate" />
    <generator version="0.093">Statocles</generator>

    <entry>
        <id>https://mojolicious.io/blog/2018/12/20/testing-dancer/</id>
        <title>Day 20: Testing Dancer</title>
        <author><name>Joel Berger</name></author>
        <link href="https://mojolicious.io/blog/2018/12/20/testing-dancer/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>Authors of Dancer (and other) PSGI applications are probably accustomed to <a href="https://metacpan.org/pod/distribution/Dancer2/lib/Dancer2/Manual.pod#TESTING">testing</a> with <a href="https://metacpan.org/pod/Plack::Test">Plack::Test</a>, and while that is a venerated option, it is pretty bare-bones.</p>

<p>During advent last year, I wrote about <a href="https://mojolicious.org/perldoc/Test/Mojo">Test::Mojo</a>, showing the many easy and (dare I say) fun ways that you can use it to test your Mojolicious applications.
If you missed it, go <a href="https://mojolicious.io/blog/2017/12/09/day-9-the-best-way-to-test/">check it out</a>.</p>

<p>I expect there are at least a few of you out there who read that and think, &quot;I&#39;d love to use that, but I don&#39;t use Mojolicious!&quot;; well, you&#39;re in luck!
With just a little role to bridge the gap, you can use Test::Mojo to test your PSGI applications too!</p>

                <p><a href="https://mojolicious.io/blog/2018/12/20/testing-dancer/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/testing/">testing</a>
                    <a href="https://mojolicious.io/blog/tag/psgi/">psgi</a>
                </p>

        ]]></content>
        <updated>2018-12-20T00:00:00Z</updated>
        <category term="advent" />
        <category term="testing" />
        <category term="psgi" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2018/12/04/testing-hooks-and-helpers/</id>
        <title>Day 4: Testing Hooks and Helpers</title>
        <author><name>Doug Bell</name></author>
        <link href="https://mojolicious.io/blog/2018/12/04/testing-hooks-and-helpers/" rel="alternate" />
        <content type="html"><![CDATA[
            <p><a href="https://mojolicious.org/perldoc/Test/Mojo">Test::Mojo</a>, the
<a href="http://mojolicious.org">Mojolicious</a> testing tool, has a lot of ways to
<a href="https://mojolicious.org/perldoc/Mojolicious/Guides/Testing">test routes in web
applications</a>
(even for <a href="https://metacpan.org/pod/Test::Mojo::Role::PSGI">testing in other web
frameworks</a>).</p>

<p>But what if what I need to test isn&#39;t a route? What if it&#39;s
a <a href="https://mojolicious.org/perldoc/Mojolicious#HOOKS">hook</a>,
a <a href="https://mojolicious.org/perldoc/Mojolicious/Guides/Cookbook#Adding-a-plugin-to-your-application">plugin</a>,
or
a <a href="https://mojolicious.org/perldoc/Mojolicious/Guides/Rendering#Helpers">helper</a>?
We can test all those things, too!</p>

                <p><a href="https://mojolicious.io/blog/2018/12/04/testing-hooks-and-helpers/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/testing/">testing</a>
                </p>

        ]]></content>
        <updated>2018-12-04T00:00:00Z</updated>
        <category term="advent" />
        <category term="testing" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2017/12/20/day-20-practical-testing/</id>
        <title>Day 20: Practical Testing</title>
        <author><name>Joel Berger</name></author>
        <link href="https://mojolicious.io/blog/2017/12/20/day-20-practical-testing/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>Back on <a href="https://mojolicious.io/blog/2017/12/09/day-9-the-best-way-to-test">Day 9</a> we discussed testing and especially <a href="http://mojolicious.org/perldoc/Test/Mojo">Test::Mojo</a>.
Today I want to just briefly talk about some practical things that can come up when testing real world applications.
Once again the discussion will be motivated by the <a href="https://github.com/jberger/Wishlist">Wishlist</a> application that we&#39;ve been developing these past few days.</p>

                <p><a href="https://mojolicious.io/blog/2017/12/20/day-20-practical-testing/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/mocking/">mocking</a>
                    <a href="https://mojolicious.io/blog/tag/testing/">testing</a>
                    <a href="https://mojolicious.io/blog/tag/wishlist/">wishlist</a>
                </p>

        ]]></content>
        <updated>2017-12-20T00:00:00Z</updated>
        <category term="advent" />
        <category term="mocking" />
        <category term="testing" />
        <category term="wishlist" />
    </entry>
    <entry>
        <id>https://mojolicious.io/blog/2017/12/09/day-9-the-best-way-to-test/</id>
        <title>Day 9: The Best Way to Test</title>
        <author><name>Joel Berger</name></author>
        <link href="https://mojolicious.io/blog/2017/12/09/day-9-the-best-way-to-test/" rel="alternate" />
        <content type="html"><![CDATA[
            <p>Ok so it is a bit of a click-bait headline.
But that doesn&#39;t mean I don&#39;t believe it.</p>

<p><a href="http://mojolicious.org/perldoc/Test/Mojo">Test::Mojo</a> is a test framework for websites and related technologies.
While its true that there are many such tools, this one gets its power comes from combining so many of the tools that Mojolicious provides.
A full non-blocking web server, including websockets, an <a href="http://mojolicious.org/perldoc/Mojo/IOLoop">event loop</a>, an <a href="http://mojolicious.org/perldoc/Mojo/DOM">XML/HTML DOM parser</a>, <a href="http://mojolicious.org/perldoc/Mojo/JSON">JSON parser and emitter</a>, and more all come together to make incredibly detailed testing simple.
Further, with the recent additions in support of <a href="http://mojolicious.org/perldoc/Mojo/Base#with_roles">roles</a> (which will be discussed in a future post), Test::Mojo is becoming an extensible testing platform.</p>

<p>In this article, I&#39;ll give a quick overview of how to use Test::Mojo and some of its methods.
Rest assured you&#39;ll see more of it as the series continues.</p>

                <p><a href="https://mojolicious.io/blog/2017/12/09/day-9-the-best-way-to-test/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    <a href="https://mojolicious.io/blog/tag/testing/">testing</a>
                </p>

        ]]></content>
        <updated>2017-12-09T00:00:00Z</updated>
        <category term="advent" />
        <category term="testing" />
    </entry>
</feed>

