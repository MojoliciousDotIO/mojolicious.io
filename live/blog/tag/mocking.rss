<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>mojolicious.io</title>
        <link>https://mojolicious.io/blog/tag/mocking/</link>
        <atom:link href="https://mojolicious.io/blog/tag/mocking.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of mojolicious.io</description>
        <generator>Statocles 0.088</generator>
        <item>
            <title>Day 20: Practical Testing</title>
            <link>https://mojolicious.io/blog/2017/12/20/day-20-practical-testing/</link>
            <guid>https://mojolicious.io/blog/2017/12/20/day-20-practical-testing/</guid>
            <description><![CDATA[
                <p>Back on <a href="https://mojolicious.io/blog/2017/12/09/day-9-the-best-way-to-test">Day 9</a> we discussed testing and especially <a href="http://mojolicious.org/perldoc/Test/Mojo">Test::Mojo</a>.
Today I want to just briefly talk about some practical things that can come up when testing real world applications.
Once again the discussion will be motivated by the <a href="https://github.com/jberger/Wishlist">Wishlist</a> application that we&#39;ve been developing these past few days.</p>

                    <p><a href="https://mojolicious.io/blog/2017/12/20/day-20-practical-testing/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                        <a href="https://mojolicious.io/blog/tag/mocking/">mocking</a>
                        <a href="https://mojolicious.io/blog/tag/testing/">testing</a>
                        <a href="https://mojolicious.io/blog/tag/wishlist/">wishlist</a>
                    </p>

            ]]></description>
            <pubDate>
                Wed, 20 Dec 2017 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Day 8: Mocking a REST API</title>
            <link>https://mojolicious.io/blog/2017/12/08/day-8-mocking-a-rest-api/</link>
            <guid>https://mojolicious.io/blog/2017/12/08/day-8-mocking-a-rest-api/</guid>
            <description><![CDATA[
                <p>One of my applications is a pure-JavaScript UI for a JSON API. This UI
is an entirely different project that communicates with a public API
using an OpenAPI specification.</p>

<p>Our public API is huge and complex: To set up the public API, I need
a database, sample data, and three other private API servers that
perform individual tasks as directed by the public API. Worse, I would
need to set up a lot of different test scenarios with different kinds of
data.</p>

<p>It would be a lot easier to set up a mock public API that I could use to
test my UI, and it turns out that Mojolicious makes this very easy.</p>

                    <p><a href="https://mojolicious.io/blog/2017/12/08/day-8-mocking-a-rest-api/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                        <a href="https://mojolicious.io/blog/tag/mocking/">mocking</a>
                        <a href="https://mojolicious.io/blog/tag/api/">api</a>
                    </p>

            ]]></description>
            <pubDate>
                Fri, 08 Dec 2017 00:00:00 +0000
            </pubDate>
        </item>
    </channel>
</rss>

