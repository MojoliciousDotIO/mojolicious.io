<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>mojolicious.io</title>
        <link>https://mojolicious.io/blog/</link>
        <atom:link href="https://mojolicious.io/blog/index.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of mojolicious.io</description>
        <generator>Statocles 0.093</generator>
        <item>
            <title>Day 8: Authenticating with LDAP</title>
            <link>https://mojolicious.io/blog/2018/12/08/authenticating-with-ldap/</link>
            <guid>https://mojolicious.io/blog/2018/12/08/authenticating-with-ldap/</guid>
            <description><![CDATA[
                <p>There are still quite a few people using LDAP in production,
but for those who are new to it,
LDAP is a directory with a tree-structure that&#39;s optimised for very fast lookups.
It used to be very common as a centralised authentication system
and if you&#39;re using Active Directory, you&#39;re using LDAP (mostly).
I wander through the wilderness of authentication,
ending with my solution on how to add LDAP authentication to your App.</p>

                    <p><a href="https://mojolicious.io/blog/2018/12/08/authenticating-with-ldap/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                        <a href="https://mojolicious.io/blog/tag/ldap/">LDAP</a>
                        <a href="https://mojolicious.io/blog/tag/authentication/">authentication</a>
                    </p>

            ]]></description>
            <pubDate>
                Sat, 08 Dec 2018 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Day 7: MetaCPAN, Mojolicious and OpenAPI</title>
            <link>https://mojolicious.io/blog/2018/12/07/openapi/</link>
            <guid>https://mojolicious.io/blog/2018/12/07/openapi/</guid>
            <description><![CDATA[
                <p>During this years <a href="http://www.olafalders.com/2018/11/21/metahack-3-wrap-report/">meta::hack 3</a>, I was extremely fortunate to work with <a href="https://twitter.com/joelaberger">Joel Berger</a> on integrating/documenting OpenAPI with the MetaCPAN API via Mojolicious.</p>

<h2>What is it?</h2>

<p>OpenAPI is a specification for designing, documenting, validating and driving your RESTful API. It can be used to provide documentation to an existing API, or when creating a new one.</p>

<p>The OpenAPI Specification originated as the Swagger specification and was renamed to separate the API description format (OpenAPI) from the open source tooling (Swagger). The specification moved into a new GitHub repository, but did not change.</p>

<p>In the case of the MetaCPAN API, we set out to provide documentation to the existing API, but quickly moved into supporting validation to API calls as well.</p>

                    <p><a href="https://mojolicious.io/blog/2018/12/07/openapi/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                        <a href="https://mojolicious.io/blog/tag/development/">development</a>
                        <a href="https://mojolicious.io/blog/tag/openapi/">openapi</a>
                        <a href="https://mojolicious.io/blog/tag/api/">api</a>
                    </p>

            ]]></description>
            <pubDate>
                Fri, 07 Dec 2018 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Day 6: Making A List with Yancy</title>
            <link>https://mojolicious.io/blog/2018/12/06/making-a-list-with-yancy/</link>
            <guid>https://mojolicious.io/blog/2018/12/06/making-a-list-with-yancy/</guid>
            <description><![CDATA[
                <p>In these modern times, with billions of people in the world, Santa needs a
modern system to keep track of his naughty/nice list. Lucky for Santa, modern
Perl has a modern web framework, <a href="http://mojolicious.org">Mojolicious</a>.</p>

                    <p><a href="https://mojolicious.io/blog/2018/12/06/making-a-list-with-yancy/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                        <a href="https://mojolicious.io/blog/tag/yancy/">yancy</a>
                        <a href="https://mojolicious.io/blog/tag/example/">example</a>
                    </p>

            ]]></description>
            <pubDate>
                Thu, 06 Dec 2018 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Day 5: Compound Selectors are Easier than Regexes</title>
            <link>https://mojolicious.io/blog/2018/12/05/compound-selectors/</link>
            <guid>https://mojolicious.io/blog/2018/12/05/compound-selectors/</guid>
            <description><![CDATA[
                <p>When people tell me that I can&#39;t (they mean shouldn&#39;t) parse HTML with a regex, I say &quot;hold my beer&quot;. It isn&#39;t a matter of skill or attitude so much as convenience. Doing it the right way was not always so easy (I remember HTML 0.9 being a big deal). Lately, though, I&#39;ve been using <a href="https://mojolicious.org/perldoc/Mojo/DOM">Mojo::DOM</a> to do it for me. It&#39;s easier than the old, expedient way.</p>

                    <p><a href="https://mojolicious.io/blog/2018/12/05/compound-selectors/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="https://mojolicious.io/blog/tag/promises/">promises</a>
                        <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                    </p>

            ]]></description>
            <pubDate>
                Wed, 05 Dec 2018 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Day 4: Testing Hooks and Helpers</title>
            <link>https://mojolicious.io/blog/2018/12/04/testing-hooks-and-helpers/</link>
            <guid>https://mojolicious.io/blog/2018/12/04/testing-hooks-and-helpers/</guid>
            <description><![CDATA[
                <p><a href="https://mojolicious.org/perldoc/Test/Mojo">Test::Mojo</a>, the
<a href="http://mojolicious.org">Mojolicious</a> testing tool, has a lot of ways to
<a href="https://mojolicious.org/perldoc/Mojolicious/Guides/Testing">test routes in web
applications</a>
(even for <a href="https://metacpan.org/pod/Test::Mojo::Role::PSGI">testing in other web
frameworks</a>).</p>

<p>But what if what I need to test isn&#39;t a route? What if it&#39;s
a <a href="https://mojolicious.org/perldoc/Mojolicious#HOOKS">hook</a>,
a <a href="https://mojolicious.org/perldoc/Mojolicious/Guides/Cookbook#Adding-a-plugin-to-your-application">plugin</a>,
or
a <a href="https://mojolicious.org/perldoc/Mojolicious/Guides/Rendering#Helpers">helper</a>?
We can test all those things, too!</p>

                    <p><a href="https://mojolicious.io/blog/2018/12/04/testing-hooks-and-helpers/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="https://mojolicious.io/blog/tag/advent/">advent</a>
                        <a href="https://mojolicious.io/blog/tag/testing/">testing</a>
                    </p>

            ]]></description>
            <pubDate>
                Tue, 04 Dec 2018 00:00:00 +0000
            </pubDate>
        </item>
    </channel>
</rss>

